<snippet>
	<content><![CDATA[
vector<int> BIT(200005, 0);
// point update on the original array
void add(int i, int x) {
	for (; i < BIT.size(); i += i & (-i)) BIT[i] += x;
}
// get sum from index 1 to index i from array
int get(int i) {
	int sum = 0;
	for (; i > 0; i -= i & (-i)) sum += BIT[i];
	return sum;
}
// equivalent to calculating lower_bound on prefix sums array
int bit_search(long long val) {  //using binary lifting
	long long sum = 0, pos = 0, s = BIT.size();
	for (int i = log2(s); i >= 0; i--) {
		int d = (1 << i);
		if (pos + d < s && sum + BIT[pos + d] < val)
			sum += BIT[pos + d],    pos += d;
	}
	return pos + 1;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>fenwick</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
